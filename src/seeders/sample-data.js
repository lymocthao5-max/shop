const { User, Service, Barber, Booking, Customer } = require('../models');
const bcrypt = require('bcryptjs');

const createSampleData = async () => {
  try {
    console.log('üå± Creating sample data...');

    // Create sample services
    const services = await Service.bulkCreate([
      {
        name: 'C·∫Øt t√≥c nam c∆° b·∫£n',
        description: 'D·ªãch v·ª• c·∫Øt t√≥c nam c∆° b·∫£n v·ªõi phong c√°ch hi·ªán ƒë·∫°i',
        price: 150000,
        duration: 30,
        category: 'C·∫Øt t√≥c',
        features: ['G·ªôi ƒë·∫ßu', 'C·∫Øt t√≥c', 'T·∫°o ki·ªÉu'],
        popular: true,
        color: 'blue'
      },
      {
        name: 'C·∫Øt t√≥c VIP',
        description: 'D·ªãch v·ª• c·∫Øt t√≥c cao c·∫•p v·ªõi stylist chuy√™n nghi·ªáp',
        price: 300000,
        duration: 60,
        category: 'C·∫Øt t√≥c',
        features: ['G·ªôi ƒë·∫ßu', 'C·∫Øt t√≥c', 'T·∫°o ki·ªÉu', 'Massage ƒë·∫ßu', 'ƒê·∫Øp m·∫∑t n·∫°'],
        popular: true,
        color: 'gold'
      },
      {
        name: 'G·ªôi + Massage',
        description: 'D·ªãch v·ª• g·ªôi ƒë·∫ßu th∆∞ gi√£n k·∫øt h·ª£p massage',
        price: 100000,
        duration: 45,
        category: 'ChƒÉm s√≥c',
        features: ['G·ªôi ƒë·∫ßu', 'Massage ƒë·∫ßu', 'Massage vai g√°y'],
        popular: false,
        color: 'green'
      },
      {
        name: 'Nhu·ªôm t√≥c',
        description: 'D·ªãch v·ª• nhu·ªôm t√≥c v·ªõi m√†u s·∫Øc th·ªùi trang',
        price: 500000,
        duration: 120,
        category: 'Nhu·ªôm',
        features: ['T∆∞ v·∫•n m√†u', 'Nhu·ªôm t√≥c', 'ChƒÉm s√≥c sau nhu·ªôm'],
        popular: false,
        color: 'purple'
      },
      {
        name: 'U·ªën t√≥c',
        description: 'D·ªãch v·ª• u·ªën t√≥c t·∫°o ki·ªÉu theo y√™u c·∫ßu',
        price: 400000,
        duration: 90,
        category: 'U·ªën',
        features: ['T∆∞ v·∫•n ki·ªÉu t√≥c', 'U·ªën t√≥c', 'T·∫°o ki·ªÉu'],
        popular: false,
        color: 'orange'
      }
    ]);

    // Create sample barbers
    const barbers = await Barber.bulkCreate([
      {
        name: 'Nguy·ªÖn VƒÉn Anh',
        nickname: 'Anh Barber',
        specialty: 'C·∫Øt t√≥c nam, t·∫°o ki·ªÉu hi·ªán ƒë·∫°i',
        specialties: ['C·∫Øt t√≥c nam', 'Fade cut', 'Undercut'],
        experience: '5 nƒÉm kinh nghi·ªám',
        rating: 4.8,
        bio: 'Chuy√™n gia c·∫Øt t√≥c nam v·ªõi nhi·ªÅu nƒÉm kinh nghi·ªám trong ng√†nh',
        phoneNumber: '0901234567',
        email: 'anh.barber@shopbarber.com'
      },
      {
        name: 'Tr·∫ßn Minh Tu·∫•n',
        nickname: 'Tu·∫•n Pro',
        specialty: 'Nhu·ªôm t√≥c, t·∫°o ki·ªÉu s√°ng t·∫°o',
        specialties: ['Nhu·ªôm t√≥c', 'Highlight', 'Balayage'],
        experience: '7 nƒÉm kinh nghi·ªám',
        rating: 4.9,
        bio: 'Chuy√™n gia nhu·ªôm t√≥c v√† t·∫°o ki·ªÉu v·ªõi phong c√°ch s√°ng t·∫°o',
        phoneNumber: '0907654321',
        email: 'tuan.pro@shopbarber.com'
      },
      {
        name: 'L√™ Ho√†ng Nam',
        nickname: 'Nam Stylist',
        specialty: 'U·ªën t√≥c, t·∫°o ki·ªÉu c·ªï ƒëi·ªÉn',
        specialties: ['U·ªën t√≥c', 'Perm', 'T·∫°o ki·ªÉu c·ªï ƒëi·ªÉn'],
        experience: '4 nƒÉm kinh nghi·ªám',
        rating: 4.7,
        bio: 'Chuy√™n gia u·ªën t√≥c v√† t·∫°o ki·ªÉu v·ªõi phong c√°ch c·ªï ƒëi·ªÉn',
        phoneNumber: '0903456789',
        email: 'nam.stylist@shopbarber.com'
      }
    ]);

    // Create sample admin user
    const adminUser = await User.create({
      name: 'Admin ShopBarber',
      email: 'admin@shopbarber.com',
      password: 'admin123456',
      phone: '0900000000',
      role: 'admin'
    });

    // Create sample customer user
    const customerUser = await User.create({
      name: 'Kh√°ch h√†ng m·∫´u',
      email: 'customer@example.com',
      password: 'customer123',
      phone: '0911111111',
      role: 'customer'
    });

    // Create sample customers
    const customers = await Customer.bulkCreate([
      {
        name: 'Nguy·ªÖn VƒÉn A',
        phone: '0912345678',
        email: 'nguyenvana@example.com',
        totalVisits: 5,
        totalSpent: 750000,
        membershipLevel: 'silver',
        loyaltyPoints: 75
      },
      {
        name: 'Tr·∫ßn VƒÉn B',
        phone: '0987654321',
        email: 'tranvanb@example.com',
        totalVisits: 12,
        totalSpent: 1800000,
        membershipLevel: 'gold',
        loyaltyPoints: 180
      }
    ]);

    // Create sample bookings
    const today = new Date();
    const tomorrow = new Date(today);
    tomorrow.setDate(tomorrow.getDate() + 1);

    const bookings = await Booking.bulkCreate([
      {
        customerName: 'Nguy·ªÖn VƒÉn A',
        customerPhone: '0912345678',
        customerEmail: 'nguyenvana@example.com',
        service: 'C·∫Øt t√≥c nam c∆° b·∫£n',
        barber: 'Nguy·ªÖn VƒÉn Anh',
        bookingDate: tomorrow.toISOString().split('T')[0],
        bookingTime: '09:00:00',
        status: 'confirmed',
        price: 150000,
        duration: 30,
        userId: customerUser.id,
        serviceId: services[0].id,
        barberId: barbers[0].id
      },
      {
        customerName: 'Tr·∫ßn VƒÉn B',
        customerPhone: '0987654321',
        customerEmail: 'tranvanb@example.com',
        service: 'C·∫Øt t√≥c VIP',
        barber: 'Tr·∫ßn Minh Tu·∫•n',
        bookingDate: tomorrow.toISOString().split('T')[0],
        bookingTime: '10:30:00',
        status: 'pending',
        price: 300000,
        duration: 60,
        serviceId: services[1].id,
        barberId: barbers[1].id
      }
    ]);

    console.log('‚úÖ Sample data created successfully!');
    console.log(`üìä Created: ${services.length} services, ${barbers.length} barbers, ${customers.length} customers, ${bookings.length} bookings`);
    console.log('üë§ Admin login: admin@shopbarber.com / admin123456');
    console.log('üë§ Customer login: customer@example.com / customer123');

  } catch (error) {
    console.error('‚ùå Error creating sample data:', error);
  }
};

module.exports = createSampleData;